language: cpp
matrix:
  include:
    - os: linux
      dist: xenial
      name: Python 2.7, gcc 8.0
      env: PYTHON=2.7 CC=gcc-8 CXX=g++-8
      sudo: true
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
    - os: osx
      name: Python 2.7, AppleClang 9
      osx_image: xcode9
      env: PYTHON=2.7 CC=clang CXX=clang++
      sudo: true

# Enable Slack notifications, disable e-mail
notifications:
    slack: GQCG:5PZ5ibXCwNU1b5ToWbHVIqnI
    email: false

before_cache:
    - rm -rf $HOME/miniconda/locks $HOME/miniconda/pkgs $HOME/miniconda/var $HOME/miniconda/conda-meta/history
    - pip uninstall -y cardboardlint

# Cache miniconda for faster build procedures
cache:
    directories:
        - $HOME/miniconda
        - $HOME/download

# Install general dependencies
install:
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
      fi
    else
      if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
        wget https://repo.anaconda.com/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
      else
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
      fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Configure conda
  - source $HOME/miniconda/bin/activate
  - hash -r
  - conda config --set always_yes yes --set changeps1 no

  # Install a recent version of CMake, Boost and eigen if they are not yet already installed.
  - if [ ! -f $HOME/miniconda/bin/cmake ]; then
      conda install -c conda-forge cmake=3.13 blas mkl numpy;
      conda install -c intel mkl-include mkl-static intel-openmp;
    else
      echo "Using already installed packages.";
    fi
  - export PATH=${HOME}/miniconda/bin:${PATH} # Use conda CMake

# Run the build script
script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && cd build
  - cmake .. -DUSE_MKL=TRUE -DENABLE_TEST=1
  - make -j3 VERBOSE=1 && make test ARGS=-V && sudo make install
