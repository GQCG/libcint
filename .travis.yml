language: python
matrix:
  include:
    - os: linux
      dist: xenial
      name: Python 2.7, gcc 8.0
      env: PYTHON=2.7 CC=gcc-8 CXX=g++-8
      python:
        - "2.7"
      sudo: true
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
    - os: osx
      language: generic
      name: Python 2.7, AppleClang 7
      osx_image: xcode7
      env: PYTHON=2.7 CC=clang CXX=clang++
      sudo: true

# Enable Slack notifications, disable e-mail
notifications:
  slack: GQCG:5PZ5ibXCwNU1b5ToWbHVIqnI
  email: false

before_cache:
  - rm -rf $HOME/miniconda/locks $HOME/miniconda/pkgs $HOME/miniconda/var $HOME/miniconda/conda-meta/history
  - pip uninstall -y cardboardlint

# Cache miniconda for faster build procedures
cache:
  directories:
    - $HOME/miniconda
    - $HOME/download

before_install:
  - |
    set -ex
    if [ -d $HOME/miniconda/bin ]; then
      echo "Miniconda already installed.";
    else
      echo "Installing miniconda.";
      rm -rf $HOME/miniconda;
      mkdir -p $HOME/download;
      if [ "$TRAVIS_OS_NAME" = "linux" ]; then
        if [ "$PYTHON" = "2.7" ]; then
          wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
        else
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
        fi;
      else
        if [ "$PYTHON" = "2.7" ]; then
          wget https://repo.anaconda.com/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O $HOME/download/miniconda.sh;
        else
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O $HOME/download/miniconda.sh;
        fi;
      fi;
      bash $HOME/download/miniconda.sh -b -p $HOME/miniconda
    fi
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no

install:
  # Configure conda
  - source $HOME/miniconda/bin/activate
  - hash -r
  - conda config --set always_yes yes --set changeps1 no

  # Install a recent version of CMake, Boost and eigen if they are not yet already installed.
  - if [ ! -f $HOME/miniconda/bin/cmake ]; then
      conda install -c conda-forge cmake=3.13 blas mkl numpy;
      conda install -c intel mkl-include mkl-static intel-openmp;
    else
      echo "Using already installed packages.";
    fi
  - export PATH=${HOME}/miniconda/bin:${PATH} # Use conda CMake

# Run the build script
script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir build && cd build
  - cmake .. -DUSE_MKL=TRUE -DENABLE_TEST=1
  - make -j3 VERBOSE=1 && make test ARGS=-V && sudo make install
